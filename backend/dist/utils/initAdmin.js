"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.initializeAdmin = void 0;
const bcryptjs_1 = __importDefault(require("bcryptjs"));
const models_1 = require("../models");
const initializeAdmin = async () => {
    try {
        console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
        const adminEmail = process.env.ADMIN_EMAIL;
        const adminPassword = process.env.ADMIN_PASSWORD;
        const adminFirstName = process.env.ADMIN_FIRST_NAME || '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä';
        const adminLastName = process.env.ADMIN_LAST_NAME || '–°–∏—Å—Ç–µ–º—ã';
        if (!adminEmail || !adminPassword) {
            console.log('‚ö†Ô∏è  –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ADMIN_EMAIL –∏ ADMIN_PASSWORD –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∞');
            return;
        }
        let adminRole = await models_1.Role.findOne({ where: { name: 'admin' } });
        if (!adminRole) {
            adminRole = await models_1.Role.create({
                name: 'admin',
                description: '–°–∏—Å—Ç–µ–º–Ω–∞—è —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –ø–æ–ª–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏',
                isSystem: true
            });
            console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
        }
        const existingAdmin = await models_1.User.findOne({ where: { email: adminEmail } });
        if (existingAdmin) {
            console.log('‚ÑπÔ∏è  –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', adminEmail);
            return;
        }
        const hashedPassword = await bcryptjs_1.default.hash(adminPassword, 10);
        const admin = await models_1.User.create({
            email: adminEmail,
            password: hashedPassword,
            firstName: adminFirstName,
            lastName: adminLastName,
            roleId: adminRole.id,
            isActive: true
        });
        console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω:', {
            email: admin.email,
            name: `${admin.firstName} ${admin.lastName}`,
            role: adminRole.name
        });
    }
    catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', error);
        throw error;
    }
};
exports.initializeAdmin = initializeAdmin;
//# sourceMappingURL=initAdmin.js.map