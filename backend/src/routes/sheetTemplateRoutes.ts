import { Router } from 'express';
import { authenticateToken } from '../middleware/auth';
import { getTemplates, getTemplate, createSheetFromTemplate, syncLinkedSheetData } from '../controllers/sheetTemplateController';
import { Sheet, UserSheet } from '../models';

const router = Router();

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
router.use((req, res, next) => {
  console.log(`üìã Template route: ${req.method} ${req.path}`);
  console.log(`üìã Headers:`, req.headers.authorization ? 'Authorization present' : 'No authorization');
  console.log(`üìã Body:`, req.body);
  next();
});

// –í—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã —Ç—Ä–µ–±—É—é—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
router.use(authenticateToken);

// GET /api/templates - –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤
router.get('/', getTemplates);

// GET /api/templates/:id - –ø–æ–ª—É—á–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –ø–æ ID
router.get('/:id', getTemplate);

// POST /api/templates/create - —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∏–∑ —à–∞–±–ª–æ–Ω–∞ (–î–û–õ–ñ–ï–ù –±—ã—Ç—å –ü–ï–†–ï–î /:templateId)
router.post('/create', (req, res, next) => {
  console.log('üéØ POST /create endpoint reached!');
  console.log('üéØ User from middleware:', req.user);
  console.log('üéØ Request body:', req.body);
  next();
}, createSheetFromTemplate);

// POST /api/templates/:templateId/create-sheet - —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∏–∑ —à–∞–±–ª–æ–Ω–∞
router.post('/:templateId/create-sheet', createSheetFromTemplate);

// –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–≤—è–∑–∞–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
router.post('/sync/:reportSheetId/:sourceSheetId', async (req, res) => {
  try {
    const { reportSheetId, sourceSheetId } = req.params;
    const { targetDate } = req.body;

    await syncLinkedSheetData(
      parseInt(reportSheetId), 
      parseInt(sourceSheetId), 
      targetDate
    );

    res.json({
      message: '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã',
      reportSheetId,
      sourceSheetId,
      targetDate
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error);
    res.status(500).json({
      error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏'
    });
  }
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞—Ç—ã –æ—Ç—á–µ—Ç–∞
router.put('/update-report-date/:sheetId', authenticateToken, async (req, res) => {
  try {
    const { sheetId } = req.params;
    const { reportDate } = req.body;
    const userId = req.user.id;

    if (!reportDate) {
      return res.status(400).json({
        error: '–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞'
      });
    }

    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∞–±–ª–∏—Ü–µ
    const sheet = await Sheet.findByPk(sheetId);
    if (!sheet) {
      return res.status(404).json({
        error: '–¢–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    const hasAccess = sheet.createdBy === userId || sheet.isPublic;
    if (!hasAccess) {
      const userSheet = await UserSheet.findOne({
        where: { userId, sheetId }
      });
      if (!userSheet || !['write', 'admin'].includes(userSheet.permission)) {
        return res.status(403).json({
          error: '–ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã'
        });
      }
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É –æ—Ç—á–µ—Ç–∞
    await sheet.update({ reportDate });

    // –ï—Å–ª–∏ —ç—Ç–æ —Å–≤—è–∑–∞–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    if (sheet.sourceSheetId) {
      await syncLinkedSheetData(sheet.id, sheet.sourceSheetId, reportDate);
    }

    res.json({
      message: '–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞',
      sheetId,
      reportDate,
      synchronized: !!sheet.sourceSheetId
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞—Ç—ã –æ—Ç—á–µ—Ç–∞:', error);
    res.status(500).json({
      error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞—Ç—ã –æ—Ç—á–µ—Ç–∞'
    });
  }
});

export default router; 