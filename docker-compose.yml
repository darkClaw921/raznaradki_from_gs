services:
  # База данных MySQL
  mysql:
    image: mysql:8.0
    container_name: dmd_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/seeds:/docker-entrypoint-initdb.d/seeds
      - ./mysql/my.cnf:/etc/mysql/conf.d/charset.cnf
    ports:
      - "3306:3306"
    networks:
      - dmd_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend API - Production Mode
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: dmd_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${MYSQL_DATABASE}
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      JWT_SECRET: ${JWT_SECRET:}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      FRONTEND_URL: ${FRONTEND_URL}
      # Переменные администратора
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      ADMIN_FIRST_NAME: ${ADMIN_FIRST_NAME:-Администратор}
      ADMIN_LAST_NAME: ${ADMIN_LAST_NAME:-Системы}
    ports:
      - "3001:3001"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - dmd_network

  # Frontend React App - Production build served by nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: dmd_frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      REACT_APP_API_URL: ${REACT_APP_API_URL}
      REACT_APP_WS_URL: ${REACT_APP_WS_URL}
    ports:
      - "3000:3000"
    networks:
      - dmd_network

  # Adminer для управления БД (опционально)
  adminer:
    image: adminer:latest
    container_name: dmd_adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - dmd_network
    profiles:
      - admin

  # PHPMyAdmin для управления БД (опционально)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: dmd_phpmyadmin
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - dmd_network
    


volumes:
  mysql_data:
    driver: local

networks:
  dmd_network:
    driver: bridge